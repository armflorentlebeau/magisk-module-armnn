name: Build ArmNN Magisk Module

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Set latest version
    env:
      ARMNN_MAJ_VER: "23"
      ARMNN_MIN_VER: "02"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download ArmNN and package it
        run: |
          wget https://github.com/ARM-software/android-nn-driver/releases/download/v${{ env.ARMNN_MAJ_VER }}.${{ env.ARMNN_MIN_VER }}/AndroidNN-android-32-arm64-v8.2-a.tar.gz
          wget https://raw.githubusercontent.com/topjohnwu/Magisk/master/scripts/module_installer.sh
          tar xf AndroidNN-android-32-arm64-v8.2-a.tar.gz
          mkdir -p armnn.module/system/vendor/bin/hw/
          mkdir -p armnn.module/META_INF/com/google/android/
          cp AndroidNN-android-32-arm64-v8.2-a/android.hardware.neuralnetworks@1.3-service-armnn armnn.module/system/vendor/bin/hw/
          cp module_installer.sh armnn.module/META_INF/com/google/android/update-binary
          echo "#MAGISK" >> armnn.module/META_INF/com/google/android/update-script
          cd armnn.module
          zip -r armnn.zip *
  
      # Store release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: armnn.module/armnn.zip
          asset_name: magisk_module_armnn_${{ env.ARMNN_MAJ_VER }}-${{ env.ARMNN_MIN_VER }}.zip
          tag: v${{ env.ARMNN_MAJ_VER }}.${{ env.ARMNN_MIN_VER }}
          overwrite: true
          body: "Magisk module ArmNN version ${{ env.ARMNN_MAJ_VER }}.${{ env.ARMNN_MIN_VER }}"
